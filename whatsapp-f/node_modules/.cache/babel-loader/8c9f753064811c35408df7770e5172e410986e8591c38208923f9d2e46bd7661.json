{"ast":null,"code":"import _objectSpread from \"C:/Users/reddy/OneDrive/Desktop/Whatsapp Clone-L/whatsapp-f/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\reddy\\\\OneDrive\\\\Desktop\\\\Whatsapp Clone-L\\\\whatsapp-f\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userDirectory = {\n  \"12345\": \"Mounika\",\n  \"67890\": \"Reddy\"\n  // Add more users if needed\n};\nexport default function App() {\n  _s();\n  const [conversations, setConversations] = useState([]); // grouped by 'from'\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  // Fetch messages from backend on mount\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n\n  // Fetch all messages and group by sender (from)\n  const fetchMessages = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:8081/api/messages\");\n      const msgs = res.data;\n      const grouped = msgs.reduce((acc, msg) => {\n        if (!acc[msg.from]) acc[msg.from] = [];\n        acc[msg.from].push(msg);\n        return acc;\n      }, {});\n      const convos = Object.entries(grouped).map(_ref => {\n        let [user, msgs] = _ref;\n        return {\n          wa_id: user,\n          messages: msgs,\n          lastMessage: msgs[msgs.length - 1]\n        };\n      });\n      setConversations(convos);\n    } catch (error) {\n      console.error(\"Failed to fetch messages\", error);\n    }\n  };\n\n  // Update messages when selected user changes\n  useEffect(() => {\n    if (!selectedUser) {\n      setMessages([]);\n      return;\n    }\n    const convo = conversations.find(c => c.wa_id === selectedUser);\n    setMessages(convo ? convo.messages : []);\n  }, [selectedUser, conversations]);\n\n  // Handle sending new message\n  const sendMessage = async () => {\n    if (!newMessage.trim() || !selectedUser) return;\n\n    // Construct message object to POST\n    const messagePayload = {\n      id: \"msg_\".concat(Date.now()),\n      // unique id\n      from: \"me\",\n      // current user sending the message\n      to: selectedUser,\n      text: newMessage.trim(),\n      timestamp: new Date().toISOString(),\n      status: \"sent\"\n    };\n    try {\n      // Send message to backend (which saves to MongoDB)\n      const response = await axios.post(\"http://localhost:8081/api/messages\", messagePayload);\n\n      // Update UI optimistically\n      setMessages(prev => [...prev, response.data]);\n      setConversations(prev => prev.map(c => c.wa_id === selectedUser ? _objectSpread(_objectSpread({}, c), {}, {\n        lastMessage: response.data,\n        messages: [...c.messages, response.data]\n      }) : c));\n      setNewMessage(\"\");\n    } catch (error) {\n      console.error(\"Failed to send message\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex vh-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 320,\n        borderRight: \"1px solid #ddd\",\n        overflowY: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"p-3 border-bottom\",\n        children: \"Chats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), conversations.map(c => {\n        var _c$lastMessage;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setSelectedUser(c.wa_id),\n          style: {\n            padding: \"10px\",\n            cursor: \"pointer\",\n            backgroundColor: selectedUser === c.wa_id ? \"#f0f0f0\" : \"white\",\n            borderBottom: \"1px solid #eee\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: userDirectory[c.wa_id] || c.wa_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 14,\n              color: \"#555\"\n            },\n            children: ((_c$lastMessage = c.lastMessage) === null || _c$lastMessage === void 0 ? void 0 : _c$lastMessage.text) || \"(No messages)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, c.wa_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 d-flex flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-bottom p-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: selectedUser ? userDirectory[selectedUser] || selectedUser : \"Select a chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"User Phone: \", selectedUser]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow-1 overflow-auto p-3\",\n        style: {\n          backgroundColor: \"#e5ddd5\"\n        },\n        children: [!selectedUser && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center text-muted mt-5\",\n          children: \"No chat selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), messages.map(msg => {\n          const isFromMe = msg.from === \"me\";\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2 p-2 rounded \".concat(isFromMe ? \"bg-success text-white align-self-end\" : \"bg-white align-self-start\"),\n            style: {\n              maxWidth: \"70%\",\n              boxShadow: \"0 1px 1px rgba(0,0,0,0.2)\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              style: {\n                fontSize: 11\n              },\n              children: [new Date(msg.timestamp).toLocaleString(), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: msg.status === \"sent\" ? \"✓\" : msg.status === \"delivered\" ? \"✓✓\" : msg.status === \"read\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: \"blue\"\n                  },\n                  children: \"\\u2713\\u2713\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 25\n                }, this) : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)]\n          }, msg._id || msg.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 border-top d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control me-2\",\n          placeholder: \"Type a message...\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          onKeyDown: e => {\n            if (e.key === \"Enter\") sendMessage();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3EwvDm9aTxAIQ904OaxVftUtq0s=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","userDirectory","App","_s","conversations","setConversations","selectedUser","setSelectedUser","messages","setMessages","newMessage","setNewMessage","fetchMessages","res","get","msgs","data","grouped","reduce","acc","msg","from","push","convos","Object","entries","map","_ref","user","wa_id","lastMessage","length","error","console","convo","find","c","sendMessage","trim","messagePayload","id","concat","Date","now","to","text","timestamp","toISOString","status","response","post","prev","_objectSpread","className","children","style","width","borderRight","overflowY","fileName","_jsxFileName","lineNumber","columnNumber","_c$lastMessage","onClick","padding","cursor","backgroundColor","borderBottom","fontSize","color","isFromMe","maxWidth","boxShadow","toLocaleString","_id","type","placeholder","value","onChange","e","target","onKeyDown","key","_c","$RefreshReg$"],"sources":["C:/Users/reddy/OneDrive/Desktop/Whatsapp Clone-L/whatsapp-f/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst userDirectory = {\r\n  \"12345\": \"Mounika\",\r\n  \"67890\": \"Reddy\",\r\n  // Add more users if needed\r\n};\r\n\r\nexport default function App() {\r\n  const [conversations, setConversations] = useState([]); // grouped by 'from'\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n\r\n  // Fetch messages from backend on mount\r\n  useEffect(() => {\r\n    fetchMessages();\r\n  }, []);\r\n\r\n  // Fetch all messages and group by sender (from)\r\n  const fetchMessages = async () => {\r\n    try {\r\n      const res = await axios.get(\"http://localhost:8081/api/messages\");\r\n      const msgs = res.data;\r\n\r\n      const grouped = msgs.reduce((acc, msg) => {\r\n        if (!acc[msg.from]) acc[msg.from] = [];\r\n        acc[msg.from].push(msg);\r\n        return acc;\r\n      }, {});\r\n\r\n      const convos = Object.entries(grouped).map(([user, msgs]) => ({\r\n        wa_id: user,\r\n        messages: msgs,\r\n        lastMessage: msgs[msgs.length - 1],\r\n      }));\r\n\r\n      setConversations(convos);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch messages\", error);\r\n    }\r\n  };\r\n\r\n  // Update messages when selected user changes\r\n  useEffect(() => {\r\n    if (!selectedUser) {\r\n      setMessages([]);\r\n      return;\r\n    }\r\n    const convo = conversations.find((c) => c.wa_id === selectedUser);\r\n    setMessages(convo ? convo.messages : []);\r\n  }, [selectedUser, conversations]);\r\n\r\n  // Handle sending new message\r\n  const sendMessage = async () => {\r\n    if (!newMessage.trim() || !selectedUser) return;\r\n\r\n    // Construct message object to POST\r\n    const messagePayload = {\r\n      id: `msg_${Date.now()}`, // unique id\r\n      from: \"me\", // current user sending the message\r\n      to: selectedUser,\r\n      text: newMessage.trim(),\r\n      timestamp: new Date().toISOString(),\r\n      status: \"sent\",\r\n    };\r\n\r\n    try {\r\n      // Send message to backend (which saves to MongoDB)\r\n      const response = await axios.post(\r\n        \"http://localhost:8081/api/messages\",\r\n        messagePayload\r\n      );\r\n\r\n      // Update UI optimistically\r\n      setMessages((prev) => [...prev, response.data]);\r\n\r\n      setConversations((prev) =>\r\n        prev.map((c) =>\r\n          c.wa_id === selectedUser\r\n            ? {\r\n                ...c,\r\n                lastMessage: response.data,\r\n                messages: [...c.messages, response.data],\r\n              }\r\n            : c\r\n        )\r\n      );\r\n\r\n      setNewMessage(\"\");\r\n    } catch (error) {\r\n      console.error(\"Failed to send message\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex vh-100\">\r\n      {/* Sidebar with conversations */}\r\n      <div\r\n        style={{\r\n          width: 320,\r\n          borderRight: \"1px solid #ddd\",\r\n          overflowY: \"auto\",\r\n        }}\r\n      >\r\n        <h4 className=\"p-3 border-bottom\">Chats</h4>\r\n        {conversations.map((c) => (\r\n          <div\r\n            key={c.wa_id}\r\n            onClick={() => setSelectedUser(c.wa_id)}\r\n            style={{\r\n              padding: \"10px\",\r\n              cursor: \"pointer\",\r\n              backgroundColor: selectedUser === c.wa_id ? \"#f0f0f0\" : \"white\",\r\n              borderBottom: \"1px solid #eee\",\r\n            }}\r\n          >\r\n            <strong>{userDirectory[c.wa_id] || c.wa_id}</strong>\r\n            <div style={{ fontSize: 14, color: \"#555\" }}>\r\n              {c.lastMessage?.text || \"(No messages)\"}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Chat window */}\r\n      <div className=\"flex-grow-1 d-flex flex-column\">\r\n        <div className=\"border-bottom p-3\">\r\n          <h5>\r\n            {selectedUser\r\n              ? userDirectory[selectedUser] || selectedUser\r\n              : \"Select a chat\"}\r\n          </h5>\r\n          {selectedUser && <small>User Phone: {selectedUser}</small>}\r\n        </div>\r\n\r\n        <div\r\n          className=\"flex-grow-1 overflow-auto p-3\"\r\n          style={{ backgroundColor: \"#e5ddd5\" }}\r\n        >\r\n          {!selectedUser && (\r\n            <p className=\"text-center text-muted mt-5\">No chat selected</p>\r\n          )}\r\n\r\n          {messages.map((msg) => {\r\n            const isFromMe = msg.from === \"me\";\r\n            return (\r\n              <div\r\n                key={msg._id || msg.id}\r\n                className={`mb-2 p-2 rounded ${\r\n                  isFromMe\r\n                    ? \"bg-success text-white align-self-end\"\r\n                    : \"bg-white align-self-start\"\r\n                }`}\r\n                style={{ maxWidth: \"70%\", boxShadow: \"0 1px 1px rgba(0,0,0,0.2)\" }}\r\n              >\r\n                <div>{msg.text}</div>\r\n                <small style={{ fontSize: 11 }}>\r\n                  {new Date(msg.timestamp).toLocaleString()}{\" \"}\r\n                  <span>\r\n                    {msg.status === \"sent\"\r\n                      ? \"✓\"\r\n                      : msg.status === \"delivered\"\r\n                      ? \"✓✓\"\r\n                      : msg.status === \"read\"\r\n                      ? (\r\n                        <span style={{ color: \"blue\" }}>✓✓</span>\r\n                      )\r\n                      : \"\"}\r\n                  </span>\r\n                </small>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {selectedUser && (\r\n          <div className=\"p-3 border-top d-flex\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control me-2\"\r\n              placeholder=\"Type a message...\"\r\n              value={newMessage}\r\n              onChange={(e) => setNewMessage(e.target.value)}\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\") sendMessage();\r\n              }}\r\n            />\r\n            <button className=\"btn btn-primary\" onClick={sendMessage}>\r\n              Send\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reddy\\\\OneDrive\\\\Desktop\\\\Whatsapp Clone-L\\\\whatsapp-f\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = \"http://localhost:8081/api/messages\";\nexport default function App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [conversations, setConversations] = useState({});\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [inputText, setInputText] = useState(\"\");\n  const pollingRef = useRef(null);\n\n  // Fetch messages on mount and every 5 sec for status updates\n  useEffect(() => {\n    fetchMessages();\n    pollingRef.current = setInterval(fetchMessages, 5000);\n    return () => clearInterval(pollingRef.current);\n  }, []);\n\n  // Group messages by user (sender phone number)\n  useEffect(() => {\n    const grouped = messages.reduce((acc, msg) => {\n      const userId = msg.from || \"unknown\";\n      if (!acc[userId]) acc[userId] = [];\n      acc[userId].push(msg);\n      return acc;\n    }, {});\n    setConversations(grouped);\n  }, [messages]);\n  async function fetchMessages() {\n    try {\n      const res = await axios.get(BACKEND_URL);\n      setMessages(res.data);\n    } catch (err) {\n      console.error(\"Failed to fetch messages\", err);\n    }\n  }\n  async function sendMessage() {\n    if (!inputText.trim() || !selectedUser) return;\n    const newMsg = {\n      id: \"local-\".concat(Date.now()),\n      from: \"me\",\n      // your user id or label\n      to: selectedUser,\n      text: inputText,\n      timestamp: new Date().toISOString(),\n      status: \"sent\"\n    };\n    try {\n      // Optimistic UI update\n      setMessages(msgs => [...msgs, newMsg]);\n\n      // Send to backend\n      await axios.post(BACKEND_URL, {\n        id: newMsg.id,\n        from: newMsg.from,\n        to: newMsg.to,\n        text: newMsg.text,\n        timestamp: newMsg.timestamp,\n        status: newMsg.status\n      });\n      setInputText(\"\");\n    } catch (err) {\n      console.error(\"Failed to send message\", err);\n    }\n  }\n\n  // Optionally update status on backend (example stub)\n  // This can be improved with real status updates from webhook processing\n  async function updateMessageStatus(msgId, newStatus) {\n    try {\n      await axios.patch(\"\".concat(BACKEND_URL, \"/\").concat(msgId, \"/status\"), {\n        status: newStatus\n      });\n      fetchMessages(); // refresh after update\n    } catch (err) {\n      console.error(\"Failed to update status\", err);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"100vh\",\n      fontFamily: \"Arial, sans-serif\",\n      maxWidth: 900,\n      margin: \"0 auto\",\n      border: \"1px solid #ccc\",\n      borderRadius: 6,\n      overflow: \"hidden\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 280,\n        borderRight: \"1px solid #ccc\",\n        overflowY: \"auto\",\n        backgroundColor: \"#f5f5f5\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          padding: 10,\n          borderBottom: \"1px solid #ccc\"\n        },\n        children: \"Chats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), Object.keys(conversations).length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          padding: 10,\n          color: \"#666\"\n        },\n        children: \"No chats found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), Object.keys(conversations).map(userId => {\n        const lastMsg = conversations[userId][conversations[userId].length - 1];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setSelectedUser(userId),\n          style: {\n            padding: 10,\n            borderBottom: \"1px solid #ddd\",\n            cursor: \"pointer\",\n            backgroundColor: selectedUser === userId ? \"#ddd\" : \"transparent\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontWeight: \"bold\"\n            },\n            children: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 12,\n              color: \"#555\"\n            },\n            children: lastMsg.text.length > 35 ? lastMsg.text.substring(0, 35) + \"...\" : lastMsg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: 10,\n              color: \"#999\",\n              marginTop: 4\n            },\n            children: new Date(lastMsg.timestamp).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, userId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n        backgroundColor: \"#fff\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 12,\n          borderBottom: \"1px solid #ccc\",\n          backgroundColor: \"#eee\",\n          fontWeight: \"bold\"\n        },\n        children: selectedUser ? \"Chat with \".concat(selectedUser) : \"Select a chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          padding: 10,\n          overflowY: \"auto\",\n          backgroundColor: \"#fafafa\"\n        },\n        children: selectedUser && conversations[selectedUser] ? conversations[selectedUser].map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 12,\n            display: \"flex\",\n            justifyContent: msg.from === \"me\" ? \"flex-end\" : \"flex-start\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              maxWidth: \"70%\",\n              backgroundColor: msg.from === \"me\" ? \"#dcf8c6\" : \"#fff\",\n              border: \"1px solid #ccc\",\n              borderRadius: 16,\n              padding: 10,\n              position: \"relative\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: 10,\n                color: \"#555\",\n                marginTop: 6,\n                textAlign: \"right\",\n                userSelect: \"none\"\n              },\n              children: [new Date(msg.timestamp).toLocaleTimeString([], {\n                hour: \"2-digit\",\n                minute: \"2-digit\"\n              }), \" \", msg.status === \"sent\" ? \"✓\" : msg.status === \"delivered\" ? \"✓✓\" : msg.status === \"read\" ? \"✓✓ (read)\" : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this)\n        }, msg.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"#888\"\n          },\n          children: selectedUser ? \"No messages\" : \"Please select a chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 10,\n          borderTop: \"1px solid #ccc\",\n          display: \"flex\",\n          alignItems: \"center\",\n          backgroundColor: \"#eee\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type a message\",\n          value: inputText,\n          onChange: e => setInputText(e.target.value),\n          onKeyDown: e => {\n            if (e.key === \"Enter\") sendMessage();\n          },\n          style: {\n            flex: 1,\n            padding: 10,\n            borderRadius: 20,\n            border: \"1px solid #ccc\",\n            fontSize: 14\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          style: {\n            marginLeft: 10,\n            backgroundColor: \"#4caf50\",\n            color: \"#fff\",\n            border: \"none\",\n            borderRadius: 20,\n            padding: \"10px 20px\",\n            cursor: \"pointer\",\n            fontWeight: \"bold\",\n            fontSize: 14\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"JHN8c565graqKRGRl62RIvlj7fY=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","jsxDEV","_jsxDEV","BACKEND_URL","App","_s","messages","setMessages","conversations","setConversations","selectedUser","setSelectedUser","inputText","setInputText","pollingRef","fetchMessages","current","setInterval","clearInterval","grouped","reduce","acc","msg","userId","from","push","res","get","data","err","console","error","sendMessage","trim","newMsg","id","concat","Date","now","to","text","timestamp","toISOString","status","msgs","post","updateMessageStatus","msgId","newStatus","patch","style","display","height","fontFamily","maxWidth","margin","border","borderRadius","overflow","children","width","borderRight","overflowY","backgroundColor","padding","borderBottom","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","color","map","lastMsg","onClick","cursor","fontWeight","fontSize","substring","marginTop","toLocaleString","flex","flexDirection","marginBottom","justifyContent","position","textAlign","userSelect","toLocaleTimeString","hour","minute","borderTop","alignItems","type","placeholder","value","onChange","e","target","onKeyDown","key","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/reddy/OneDrive/Desktop/Whatsapp Clone-L/whatsapp-f/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst BACKEND_URL = \"http://localhost:8081/api/messages\";\r\n\r\nexport default function App() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [conversations, setConversations] = useState({});\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const pollingRef = useRef(null);\r\n\r\n  // Fetch messages on mount and every 5 sec for status updates\r\n  useEffect(() => {\r\n    fetchMessages();\r\n    pollingRef.current = setInterval(fetchMessages, 5000);\r\n    return () => clearInterval(pollingRef.current);\r\n  }, []);\r\n\r\n  // Group messages by user (sender phone number)\r\n  useEffect(() => {\r\n    const grouped = messages.reduce((acc, msg) => {\r\n      const userId = msg.from || \"unknown\";\r\n      if (!acc[userId]) acc[userId] = [];\r\n      acc[userId].push(msg);\r\n      return acc;\r\n    }, {});\r\n    setConversations(grouped);\r\n  }, [messages]);\r\n\r\n  async function fetchMessages() {\r\n    try {\r\n      const res = await axios.get(BACKEND_URL);\r\n      setMessages(res.data);\r\n    } catch (err) {\r\n      console.error(\"Failed to fetch messages\", err);\r\n    }\r\n  }\r\n\r\n  async function sendMessage() {\r\n    if (!inputText.trim() || !selectedUser) return;\r\n\r\n    const newMsg = {\r\n      id: `local-${Date.now()}`,\r\n      from: \"me\",        // your user id or label\r\n      to: selectedUser,\r\n      text: inputText,\r\n      timestamp: new Date().toISOString(),\r\n      status: \"sent\",\r\n    };\r\n\r\n    try {\r\n      // Optimistic UI update\r\n      setMessages((msgs) => [...msgs, newMsg]);\r\n\r\n      // Send to backend\r\n      await axios.post(BACKEND_URL, {\r\n        id: newMsg.id,\r\n        from: newMsg.from,\r\n        to: newMsg.to,\r\n        text: newMsg.text,\r\n        timestamp: newMsg.timestamp,\r\n        status: newMsg.status,\r\n      });\r\n\r\n      setInputText(\"\");\r\n    } catch (err) {\r\n      console.error(\"Failed to send message\", err);\r\n    }\r\n  }\r\n\r\n  // Optionally update status on backend (example stub)\r\n  // This can be improved with real status updates from webhook processing\r\n  async function updateMessageStatus(msgId, newStatus) {\r\n    try {\r\n      await axios.patch(`${BACKEND_URL}/${msgId}/status`, { status: newStatus });\r\n      fetchMessages(); // refresh after update\r\n    } catch (err) {\r\n      console.error(\"Failed to update status\", err);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        height: \"100vh\",\r\n        fontFamily: \"Arial, sans-serif\",\r\n        maxWidth: 900,\r\n        margin: \"0 auto\",\r\n        border: \"1px solid #ccc\",\r\n        borderRadius: 6,\r\n        overflow: \"hidden\",\r\n      }}\r\n    >\r\n      {/* Sidebar: Conversations */}\r\n      <div\r\n        style={{\r\n          width: 280,\r\n          borderRight: \"1px solid #ccc\",\r\n          overflowY: \"auto\",\r\n          backgroundColor: \"#f5f5f5\",\r\n        }}\r\n      >\r\n        <h3 style={{ padding: 10, borderBottom: \"1px solid #ccc\" }}>Chats</h3>\r\n        {Object.keys(conversations).length === 0 && (\r\n          <p style={{ padding: 10, color: \"#666\" }}>No chats found</p>\r\n        )}\r\n        {Object.keys(conversations).map((userId) => {\r\n          const lastMsg = conversations[userId][conversations[userId].length - 1];\r\n          return (\r\n            <div\r\n              key={userId}\r\n              onClick={() => setSelectedUser(userId)}\r\n              style={{\r\n                padding: 10,\r\n                borderBottom: \"1px solid #ddd\",\r\n                cursor: \"pointer\",\r\n                backgroundColor: selectedUser === userId ? \"#ddd\" : \"transparent\",\r\n              }}\r\n            >\r\n              <div style={{ fontWeight: \"bold\" }}>{userId}</div>\r\n              <div style={{ fontSize: 12, color: \"#555\" }}>\r\n                {lastMsg.text.length > 35\r\n                  ? lastMsg.text.substring(0, 35) + \"...\"\r\n                  : lastMsg.text}\r\n              </div>\r\n              <div style={{ fontSize: 10, color: \"#999\", marginTop: 4 }}>\r\n                {new Date(lastMsg.timestamp).toLocaleString()}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* Chat Window */}\r\n      <div\r\n        style={{\r\n          flex: 1,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          backgroundColor: \"#fff\",\r\n        }}\r\n      >\r\n        {/* Header */}\r\n        <div\r\n          style={{\r\n            padding: 12,\r\n            borderBottom: \"1px solid #ccc\",\r\n            backgroundColor: \"#eee\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >\r\n          {selectedUser ? `Chat with ${selectedUser}` : \"Select a chat\"}\r\n        </div>\r\n\r\n        {/* Messages */}\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            padding: 10,\r\n            overflowY: \"auto\",\r\n            backgroundColor: \"#fafafa\",\r\n          }}\r\n        >\r\n          {selectedUser && conversations[selectedUser] ? (\r\n            conversations[selectedUser].map((msg) => (\r\n              <div\r\n                key={msg.id}\r\n                style={{\r\n                  marginBottom: 12,\r\n                  display: \"flex\",\r\n                  justifyContent: msg.from === \"me\" ? \"flex-end\" : \"flex-start\",\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    maxWidth: \"70%\",\r\n                    backgroundColor: msg.from === \"me\" ? \"#dcf8c6\" : \"#fff\",\r\n                    border: \"1px solid #ccc\",\r\n                    borderRadius: 16,\r\n                    padding: 10,\r\n                    position: \"relative\",\r\n                  }}\r\n                >\r\n                  <div>{msg.text}</div>\r\n                  <div\r\n                    style={{\r\n                      fontSize: 10,\r\n                      color: \"#555\",\r\n                      marginTop: 6,\r\n                      textAlign: \"right\",\r\n                      userSelect: \"none\",\r\n                    }}\r\n                  >\r\n                    {new Date(msg.timestamp).toLocaleTimeString([], {\r\n                      hour: \"2-digit\",\r\n                      minute: \"2-digit\",\r\n                    })}{\" \"}\r\n                    {msg.status === \"sent\"\r\n                      ? \"✓\"\r\n                      : msg.status === \"delivered\"\r\n                      ? \"✓✓\"\r\n                      : msg.status === \"read\"\r\n                      ? \"✓✓ (read)\"\r\n                      : \"\"}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p style={{ color: \"#888\" }}>\r\n              {selectedUser ? \"No messages\" : \"Please select a chat\"}\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Send message input */}\r\n        {selectedUser && (\r\n          <div\r\n            style={{\r\n              padding: 10,\r\n              borderTop: \"1px solid #ccc\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              backgroundColor: \"#eee\",\r\n            }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Type a message\"\r\n              value={inputText}\r\n              onChange={(e) => setInputText(e.target.value)}\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\") sendMessage();\r\n              }}\r\n              style={{\r\n                flex: 1,\r\n                padding: 10,\r\n                borderRadius: 20,\r\n                border: \"1px solid #ccc\",\r\n                fontSize: 14,\r\n              }}\r\n            />\r\n            <button\r\n              onClick={sendMessage}\r\n              style={{\r\n                marginLeft: 10,\r\n                backgroundColor: \"#4caf50\",\r\n                color: \"#fff\",\r\n                border: \"none\",\r\n                borderRadius: 20,\r\n                padding: \"10px 20px\",\r\n                cursor: \"pointer\",\r\n                fontWeight: \"bold\",\r\n                fontSize: 14,\r\n              }}\r\n            >\r\n              Send\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}